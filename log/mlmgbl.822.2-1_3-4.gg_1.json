{
  "version": "1",
  "fit_range": "0,24000,5",
  "offset": 20,
  "userpardicts_guess": [
    {"name":"f_mag","value":0.3,"flag":"~","error":0.005,"limits":[0,1]},
    {"name":"A12","value":0.25,"flag":"~","error":0.005,"limits":[null,null]},
    {"name":"A34","value":0.25,"flag":"~","error":0.005,"limits":[null,null]},
    {"name":"B_0","value":10.0,"flag":"~","error":0.005,"limits":[null,null]},
    {"name":"φ12","value":-55.0,"flag":"~","error":0.005,"limits":[null,null]},
    {"name":"λ_0","value":0.1,"flag":"~","error":0.005,"limits":[-87.0,null]},
    {"name":"B_T","value":10.0,"flag":"~","error":0.005,"limits":[null,null]},
    {"name":"σ_T","value":2.0,"flag":"~","error":0.005,"limits":[null,null]},
    {"name":"λ_L","value":0.3,"flag":"~","error":0.005,"limits":[-87.0,null]}
    ],
  "model_guess": [
    {
      "name": "ml",
      "label": "ext",
      "pardicts": [
        {
          "name": "A",
          "value": 0.09,
          "flag": "=",
          "function": "",
          "function_multi":[
            "(1-p[0])*p[1]",
            "(1-p[0])*p[2]"
           ],
          "error_propagate_multi":[
            "sqrt(((1-p[0])*e[1])**2+(e[0]*p[1])**2)",
            "sqrt(((1-p[0])*e[2])**2+(e[0]*p[2])**2)"
           ],
          "error": 0.01,
          "limits": [
            null,
            null
          ]
        },
        {
          "name": "B",
          "value": 10.0,
          "flag": "=",
          "function": "p[3]",
          "error": 0.1,
          "limits": [
            null,
            null
          ]
        },
        {
          "name": "φ",
          "value": 0.0,
          "flag": "=",
          "function": "",
          "function_multi":[
            "p[4]",
            "p[4]+90"
           ],
          "error": 1.0,
          "limits": [
            null,
            null
          ]
        },
        {
          "name": "λ",
          "value": 1.0,
          "flag": "=",
          "function": "p[5]",
          "error": 0.01,
          "limits": [
            -80.0,
            null
          ]
        }
      ]
    },
    {
      "name": "mg",
      "label": "T",
      "pardicts": [
        {
          "name": "A",
          "value": 0.09,
          "flag": "=",
          "function": "",
          "function_multi":[
            "2*p[0]*p[1]/3",
            "2*p[0]*p[2]/3"
           ],
          "error_propagate_multi":[
            "2/3*sqrt((p[0]*e[1])**2+(e[0]*p[1])**2)",
            "2/3*sqrt((p[0]*e[2])**2+(e[0]*p[2])**2)"
           ],
          "error": 0.01,
          "limits": [
            null,
            null
          ]
        },
        {
          "name": "B",
          "value": 10.0,
          "flag": "=",
          "function": "p[6]",
          "error": 0.1,
          "limits": [
            null,
            null
          ]
        },
        {
          "name": "φ",
          "value": 0.0,
          "flag": "=",
          "function_multi": ["p[4]-p[4]","p[4]-p[4]"],
          "error_propagate_multi":[
            "p[4]-p[4]",
            "p[4]-p[4]"
           ],
          "error": 0.0
        },
        {
          "name": "σ",
          "value": 10.0,
          "flag": "=",
          "function": "p[7]",
          "error": 0.01,
          "limits": [
            -80.0,
            null
          ]
        }
      ]
    },
    {
      "name": "bl",
      "label": "L",
      "pardicts": [
        {
          "name": "A",
          "value": 0.09,
          "flag": "=",
          "function": "",
          "function_multi":[
            "p[0]*p[1]/3",
            "p[0]*p[2]/3"
           ],
          "error_propagate_multi":[
            "sqrt((p[0]*e[1])**2+(e[0]*p[1])**2)/3",
            "sqrt((p[0]*e[2])**2+(e[0]*p[2])**2)/3"
           ],
          "error": 0.01,
          "limits": [
            null,
            null
          ]
        },
        {
          "name": "λ",
          "value": 1.0,
          "flag": "=",
          "function": "p[8]",
          "error": 0.01,
          "limits": [
            -80.0,
            null
          ]
        }
      ]
    }    
  ]
}
